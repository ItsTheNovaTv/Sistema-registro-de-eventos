import { db } from "./Firebase.js";
import {
  collection,
  getDocs
} from "https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";

// üîπ A√ëOS DISPONIBLES (2000 hasta el a√±o actual)
export async function obtenerA√±os() {
  const a√±oActual = new Date().getFullYear();
  const a√±os = [];
  for (let a√±o = 2000; a√±o <= a√±oActual; a√±o++) {
    a√±os.push(a√±o.toString());
  }
  return a√±os.reverse(); // M√°s reciente primero
}

// üîπ USUARIOS
export async function obtenerUsuarios() {
  const ref = collection(db, "usuarios");
  const snapshot = await getDocs(ref);
  return snapshot.docs.map(doc => ({
    id: doc.id,
    ...doc.data()
  }));
}

// üîπ EVENTOS por a√±o
// Ruta: /2025_eventos/
export async function obtenerEventos(a√±o) {
  if (!a√±o) throw new Error("‚ùå El a√±o no puede estar vac√≠o.");
  const eventosRef = collection(db, `${a√±o}_eventos`);
  const snapshot = await getDocs(eventosRef);
  return snapshot.docs.map(doc => doc.id); // Ej: ["programacion", "robotica"]
}

// üîπ MODALIDADES
export async function obtenerModalidades(a√±o, evento) {
  const modalidadesRef = collection(db, `${a√±o}_eventos/${evento}/modalidad`);
  const snapshot = await getDocs(modalidadesRef);
  return snapshot.docs.map(doc => doc.id);
}

// üîπ EQUIPOS
export async function obtenerEquipos(a√±o, evento, modalidad) {
  const equiposRef = collection(db, `${a√±o}_eventos/${evento}/modalidad/${modalidad}/equipos`);
  const snapshot = await getDocs(equiposRef);
  return snapshot.docs.map(doc => ({
    id: doc.id,
    ...doc.data()
  }));
}